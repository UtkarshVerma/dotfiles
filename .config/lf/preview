#!/bin/sh

BAT_SIZE_MAX=262143  # 256KiB
BAT_STYLE="${BAT_STYLE:-numbers}"
BAT_THEME="${BAT_THEME:-ansi}"

width="$2"
height="$3"
x="$4"
y="$5"

draw() {
    path="$(printf '%s' "$1" | sed 's/\\/\\\\/g;s/"/\\"/g')"
    printf '{"action": "add", "identifier": "preview", "x": %d, "y": %d, "width": %d, "height": %d, "scaler": "contain", "scaling_position_x": 0.5, "scaling_position_y": 0.5, "path": "%s"}\n' \
        "$x" "$y" "$width" "$height" "$path" >"$FIFO_UEBERZUG"
    exit 1
}

hash() {
    printf '%s/%s' "/tmp/lf/previews" \
        "$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
}

cache() {
    if [ -f "$1" ]; then
        draw "$1"
    fi
}

if ! [ -f "$1" ] && ! [ -h "$1" ]; then
    exit
fi

case "$1" in
    *.7z|*.a|*.ace|*.alz|*.arc|*.arj|*.bz|*.bz2|*.cab|*.cpio|*.deb|*.gz|*.jar|\
    *.lha|*.lrz|*.lz|*.lzh|*.lzma|*.lzo|*.rar|*.rpm|*.rz|*.t7z|*.tar|*.tbz|\
    *.tbz2|*.tgz|*.tlz|*.txz|*.tZ|*.tzo|*.war|*.xz|*.Z|*.zip)
        als -- "$1"
        exit 0
        ;;
    *.[1-8])
        man -- "$1" | col -b
        exit 0
        ;;
    *.pdf)
        if [ -n "$FIFO_UEBERZUG" ]; then
            cache="$(hash "$1")"
            cache "$cache.jpg"
            pdftoppm -jpeg -f 1 -l 1 -singlefile -- "$1" "$cache"
            draw "$cache.jpg"
        else
            pdftotext -nopgbrk -q -- "$1" -
            exit 0
        fi
        ;;
    *.docx|*.odt|*.epub)
        pandoc -s -t plain -- "$1"
        exit 0
        ;;
    *.htm|*.html|*.xhtml)
        lynx -dump -- "$1"
        exit 0
        ;;
    *.md)
        glow -s dark "$1"
        exit 0
        ;;
    *.svg)
        if [ -n "$FIFO_UEBERZUG" ]; then
            cache="$(hash "$1").jpg"
            cache "$cache"
            convert -- "$1" "$cache"
            draw "$cache"
        fi
        ;;
esac

case "$(file -Lb --mime-type -- "$1")" in
    text/*)
        if [ "$( stat --printf='%s' -- "$1" )" -gt "${BAT_SIZE_MAX}" ]; then
            exit 2
        fi

        bat --terminal-width="$(tput cols)" --decorations=always --color=always \
                    --paging=never --style="$BAT_STYLE" --theme="$BAT_THEME" "$1"
        exit 0
        ;;
    image/*)
        if [ -n "$FIFO_UEBERZUG" ]; then
            orientation="$(identify -format '%[EXIF:Orientation]\n' -- "$1")"
            if [ -n "$orientation" ] && [ "$orientation" != 1 ]; then
                cache="$(hash "$1").jpg"
                cache "$cache"
                convert -coalesce -resize ${width}x${height}\> -- "$1" "$cache"
                draw "$cache"
            else
                draw "$1"
            fi
        fi
        ;;
    */office*|*/*document*)
        cache="$(hash "$1").jpg"
        cache "$cache"
        libreoffice --convert-to jpg "$1" --outdir "$PREVIEWDIR"
        filename="$(printf "%s" "${1##*/}" | cut -d. -f1)"
        mv "$PREVIEWDIR/${1%/*}/$filename.jpg" "$PREVIEWDIR/$cache"
        ;;
    video/*)
        if [ -n "$FIFO_UEBERZUG" ]; then
            cache="$(hash "$1").jpg"
            cache "$cache"
            ffmpegthumbnailer -i "$1" -o "$cache" -s 0
            draw "$cache"
        fi
        ;;
esac

header_text="File Type Classification"
header=""
len="$(( (width - (${#header_text} + 2)) / 2 ))"
if [ "$len" -gt 0 ]; then
    for i in $(seq "$len"); do
        header="-$header"
    done
    header="$header $header_text "
    for i in $(seq "$len"); do
        header="$header-"
    done
else
    header="$header_text"
fi

printf '\033[7m%s\033[0m\n' "$header"
mediainfo -- "$1" | fold -s -w "$width"
exit 0
