## Basic options --------------------------------------------------------------
set shell sh        # Use the default shell interpreter.
set shellopts '-eu' # Exit scripts on error and on unset variables.
set ifs "\n"        # Split fields on newline in shell scripts.
set scrolloff 10    # Leave some space at the bottom of the screen.
set autoquit        # Automatically quit the server when no clients remain.
set wrapscroll      # Wrap cursor scrolling.
set mouse           # Enable mouse.

### Previews using ctpv.
set cleaner ctpvclear
set previewer ctpv

### Appearance
set cursorpreviewfmt "\033[7m"    # Highlight preview directory cursor.
set icons                         # Enable icons.
set drawbox                       # Enable borders.

## Commands -------------------------------------------------------------------
# Edit config and reload lf.
cmd edit-config ${{
    $EDITOR ~/.config/lf/lfrc
    lf -remote "send $id source ~/.config/lf/lfrc"
}}

# Move the file/directory to trash.
cmd trash %{{
    set -f

    if ! command -v trash-put >/dev/null 2>&1; then 
        echo "trash-cli is not installed."
        exit 1
    fi

    file_count=$(echo "$fx" | wc -l)
    if [ $file_count -eq 1 ]; then
        printf "trash '%s'?" $fx
    else
        printf "trash %s items?" $file_count
    fi
    printf " [y/N] "

    choice=$(/usr/bin/env bash -c 'read -n 1 choice; echo $choice')

    # Clear the prompt.
    echo

    if [ $choice != "y" ]; then
        exit
    fi

    trash-put $fx
}}

# Restore deleted files/directories from trash.
cmd restore ${{
    set -f

    if ! command -v trash-restore >/dev/null 2>&1; then 
        echo "trash-cli is not installed."
        exit 1
    fi

    deleted="$(printf "\n" | trash-restore |
        head -n -1 |
        awk -v filter="^${PWD}/[^/]*$" -v pwd_length="${#PWD}" \
            '$4~filter {print $1, substr($4, pwd_length + 2)}')"
    ids="$(echo "$deleted" |
        fzf --multi --layout=reverse |
        cut -d' ' -f1 | tr '\n' ',')"
    ids="${ids%,}"

    echo "$ids" | exec trash-restore >/dev/null
}}

# Compress current file or selected files with tar and gunzip.
cmd tar ${{
    set -f

    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# Compress current file or selected files with zip.
cmd zip ${{
    set -f

    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# Extract the current file with the right command.
cmd extract ${{
    set -f

    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# Create a new file or directory.
cmd create &{{
    set -f

    case $1 in
        */) mkdir --parents $1 ;;
        *) touch $1 ;;
    esac
}}

# Quit and update the parent shell's current working directory to match lf's.
cmd quit-and-cd &{{
    pwd > $LF_CD_FILE
    lf -remote "send $id quit"
}}

# Execute zoxide command.
cmd z %{{
    result="$(zoxide query --exclude $PWD $@ | sed 's/\\/\\\\/g;s/"/\\"/g')"
    lf -remote "send $id cd \"$result\""
}}

# Execute zoxide command interactively.
cmd zi ${{
    result="$(zoxide query --interactive | sed 's|\\|\\\\|g;s|"|\\"|g')"
    lf -remote "send $id cd \"$result\""
}}

# Drag and drop the selected files/directories.
cmd drag-and-drop &{{
    dragon-drop --all --and-exit $fx
}}

# Fuzzy find a file/directory and select it.
cmd fuzzy-find ${{
    selection=$(fzf)
    lf -remote "send $id select \"$selection\""
}}

## Keymaps --------------------------------------------------------------------
map <enter> shell         # Spawn a shell.
map ` !true               # Show the result of previous command.
map a push :create<space> # Create a new directory.
map r :rename; cmd-end    # For renames, place the cursor at the end.
map . set hidden!         # Toggle hidden files.
map <c-r> reload          # Refresh.
map x cut                 # Cut.
map D delete              # Delete permanently.

map R restore             # Restore from trash.
map E extract             # Extract archive.
map d trash               # Send to trash.
map C edit-config         # Edit config and reload lf.
map Q quit-and-cd         # Exit lf and update parent's CWD.
map zd drag-and-drop      # Drag and drop the selection.
map <c-f> fuzzy-find      # Fuzzy find and focus selection.

## Hooks ----------------------------------------------------------------------
# NOTE: This feature is releasing in v32.
# cmd on-redraw %{{
#     # Dynamically set number of columns based on the current terminal width.
#     if [ $lf_width -le 80 ]; then
#         lf -remote "send $id set ratios 1:2"
#     elif [ $lf_width -le 160 ]; then
#         lf -remote "send $id set ratios 1:2:3"
#     else
#         lf -remote "send $id set ratios 1:2:3:5"
#     fi
# }}

cmd on-cd &{{
    # Update zoxide statistics.
    zoxide add "$PWD"

    # Dynamically update the terminal title based on current working directory.
    #
    # Redirection to /dev/tty is necessary as async commands are not connected
    # to stdout.
    printf "\033]0;$(pwd | sed "s|$HOME|~|") - lf\007" >/dev/tty
}}

cmd on-quit &{{
    # Restore the cached terminal title on exit.
    #
    # Redirection to /dev/tty is necessary as async commands are not connected
    # to stdout.
    printf "\033[23t" >/dev/tty
}}

## Other stuff ----------------------------------------------------------------
# Trigger on-cd hook on startup.
on-cd

# Start ctpv server in background.
&ctpv -s $id 
&ctpvquit $id
