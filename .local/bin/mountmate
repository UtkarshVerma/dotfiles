#!/bin/sh
# This script allows hassle-free management of disk and MTP mounts using dmenu.

newLine="
"

getBlockDrives() {
    drives="$(lsblk --noheadings --raw -o rm,label,name,mountpoint |
        grep -v nvme0n1p5)" # automounted using fstab

    removableDrives="$(echo "$drives" | grep "^1" | sed 's|^1|ðŸ§³|')"
    diskDrives="$(echo "$drives" | grep -v "^1" | sed 's|^0|ðŸ—„|')"
    drives="$removableDrives$newLine$diskDrives"

    if [ "$1" = "mount" ]; then
        echo "$drives" |
            awk '$3~/[[:digit:]]/ && !$4 {
            printf "%s=%s=/dev/%s\n", $1, $2, $3
        }'
        return
    fi

    echo "$drives" |
        awk '$3~/[[:digit:]]/ && $4 {
            printf "%s=%s=%s\n", $1, $2, $4
        }'
}

getMTPDrives() {
    devices="$(lsusb -v 2>/dev/null |
        grep -e ^Bus -e mtp -e iManufacturer -e iProduct -e iSerial |
        grep -B3 mtp |
        sed 's/^.*[[:digit:]] \(.*\)/\1/g')"
    ids="$(echo "$devices" |
        sed -z 's/\([^\n]*\)\n\([^\n]*\)\n\([^\n]*\)\nmtp/\1 \2 \3/g' |
        tr ' ' '_')"

    icon="ðŸ“±"
    for id in $ids; do
        device="${id#*_}"
        device="${device%_*}"
        device="$(echo "$device" | tr '_' ' ')"
        if [ -d "$XDG_RUNTIME_DIR/gvfs/mtp:host=$id" ]; then
            mounted="${mounted}$icon=$device=mtp://$id$newLine"
        else
            unmounted="${unmounted}$icon=$device=mtp://$id$newLine"
        fi
    done

    if [ "$1" = "mount" ]; then
        echo "$unmounted"
        return
    fi

    echo "$mounted"
}

notify() {
    icon="media-mount-symbolic"
    [ "$mode" != "mount" ] && icon="media-eject-symbolic"

    notify-send -i "$icon" \
        -h string:x-canonical-private-synchronous:mountmate \
        "MountMate" "$1" -t 4000
}

prompt() {
    mtpDrives="$(getMTPDrives "$mode")"
    drives="$mtpDrives${mtpDrives:+$newLine}$(getBlockDrives "$mode")"
    drives="$(echo "$drives" | sed 's|\\x20| |g')"
    if [ -z "$drives" ]; then
        notify "Nothing to $mode."
        return
    fi

    prompt="Mount:"
    [ "$mode" != "mount" ] && prompt="Unmount:"

    chosen="$(echo "$drives" |
        awk -F'=' '{ printf "%s %s\n", $1, $2 }' |
        dmenu -i -p "$prompt")" || return 1

    chosen="${chosen#* }"
    chosenMeta="$(echo "$drives" | grep "$chosen")"
    chosenPath="${chosenMeta##*=}"
    chosenLabel="${chosenMeta%=*}"
    chosenLabel="${chosenLabel#*=}"

    if [ "$mode" != "mount" ]; then
        args="-u"
    elif ! echo "$chosenMeta" | grep -q "mtp://"; then
        args="-d"
    fi

    # shellcheck disable=2086
    if gio mount $args "$chosenPath"; then
        notify "\"$chosenLabel\" has been ${mode}ed successfully."
        return
    fi

    notify "\"$chosenLabel\" could not be ${mode}ed."
}

mode="mount"
[ "$1" = "-u" ] && mode="unmount"
prompt "$mode"
